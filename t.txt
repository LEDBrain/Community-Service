generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Sanction {
  id              Int       @id @default(autoincrement())
  /// The member getting sanctioned
  userId          String
  /// The mod sanctioning
  moderatorId     String
  /// The reason for a sanction
  reason          String?   @default("N/A")
  /// The type: should be one of 'ban', 'kick', 'mute', 'unmute' or 'warn'
  type            String
  /// The timestamp of the moment the sanction was executed
  timestamp       DateTime? @default(now())
  /// The end of a tempmute, only used if the type is mute and there will be an automated unmute
  sanctioning_end DateTime?
  /// The ID of a mute entry an unmute entry is relating to
  terminates      Int?

  Terminating Sanction?  @relation(fields: [terminates], references: [id])
  User        User       @relation("user", fields: [userId], references: [id])
  Moderator   User       @relation("moderator", fields: [moderatorId], references: [id])
  Sanction    Sanction[] @relation("SanctionToSanction")
}

model User {
  /// The Discord User ID
  id         String     @id
  /// The language code of the language the user prefers
  language   String?    @default("en")
  /// The sanctions the user received
  sanctions  Sanction[] @relation("user")
  /// The sanctions a moderator gave
  sanctioned Sanction[] @relation("moderator")
}

model ReactionMessage {
  id        String     @id
  channelId String
  guildId   String
  reactions Reaction[]
}

model Reaction {
  id   Int    @id @default(autoincrement())
  name String
  role String

  ReactionMessage   ReactionMessage @relation(fields: [reactionMessageId], references: [id])
  reactionMessageId String
}
